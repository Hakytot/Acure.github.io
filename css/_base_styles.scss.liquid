html{
  @include rem-baseline;
}
body {
    color:$bodyColor;     
    background-color:$bodyBgColor;    
    font-weight:$bodyFontWeight;
    font-family: $bodyFontStack;    
    text-transform: $bodyTransform;
    @include rem(line-height, $bodyLineHeight);
    @include rem(letter-spacing, $bodyLetterSpacing);
    @include rem(font-size, $bodyFontSize);
}

b, strong{
    color: $primaryColor;
    font-weight: 700;
}

a {
    color: $linkColor;
    &:hover,
    &:focus,
    &:active
    {
        color: $linkHoverColor;
    }
}

textarea{
    font-family: $bodyFontStack;    
    text-transform: $bodyTransform;
    font-weight:$bodyFontWeight;
    @include rem(font-size, $bodyFontSize);
}
.fallback-text{
    display: none;
}

.placeholder-svg {
    display: block;
    fill: $color-blankstate;
    background-color: $color-blankstate-background;
    width: 100%;
    height: 100%;
    max-width: 100%;
    max-height: 100%;
    border: 1px solid $color-blankstate-border;
}

.placeholder-noblocks {
    padding: 40px;
    text-align: center;
}

// Mimic a background image by wrapping the placeholder svg with this class
.placeholder-background {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    .icon {
        border: 0;
    }
}

// Custom styles for some blank state images
.image-bar__content .placeholder-svg {
    position: absolute;
    top: 0;
    left: 0;
}

.aligner {
    min-height: 24em;    
    @include flexbox();
    @include align-items(center);    
    @include justify-content(center);    
}

.aligner-item {    
    @include flex(1);
}

.aligner-item--top {
    @include align-self(flex-start);    
}

.aligner-item--bottom {    
    @include align-self(flex-end);
}

.aligner-item--fixed {    
    @include flex(none);
    max-width: 50%;
}